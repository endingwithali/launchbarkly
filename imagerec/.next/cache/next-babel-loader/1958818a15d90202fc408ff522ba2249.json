{"ast":null,"code":"\"use strict\";\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _jsxFileName = \"/Users/Ali/Documents/launchbarkly/pages/components/ImageHandle.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ImageHandle() {\n  const {\n    0: file,\n    1: setFile\n  } = (0, _react.useState)(null);\n\n  const handleSubmit = inf => {\n    console.log(inf); // this.setFile = URL.createObjectURL(inf)\n  };\n\n  return __jsx(_react.default.Fragment, null, __jsx(\"input\", {\n    type: \"file\",\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }), __jsx(\"img\", {\n    src: this.file,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n}\n\nmodule.exports = ImageHandle;\n/*\nclass ImageImport extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        file: null\n      }\n      this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(event) {\n      this.setState({\n        file: URL.createObjectURL(event.target.files[0])\n      })\n    }\n    render() {\n      return (\n        <div>\n          <input type=\"file\" onChange={this.handleChange}/>\n          <img src={this.state.file}/>\n        </div>\n      );\n    }\n  }\n  module.exports = ImageImport\n  */","map":{"version":3,"sources":["/Users/Ali/Documents/launchbarkly/pages/components/ImageHandle.js"],"names":["ImageHandle","file","setFile","handleSubmit","inf","console","log","handleChange","module","exports"],"mappings":";;AAAA;;;;;;;;;;AAEA,SAASA,WAAT,GAAsB;AAClB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkB,qBAAS,IAAT,CAAxB;;AAEA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAD0B,CAE1B;AACH,GAHD;;AAKA,SACI,qCACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAE,KAAKG,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,GAAG,EAAE,KAAKN,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AACDO,MAAM,CAACC,OAAP,GAAiBT,WAAjB;AAEA","sourcesContent":["import React, {useState} from 'react';\n\nfunction ImageHandle(){\n    const [file, setFile] = useState(null);\n\n    const handleSubmit = (inf) => {\n        console.log(inf)\n        // this.setFile = URL.createObjectURL(inf)\n    }\n\n    return(\n        <>\n            <input type=\"file\" onChange={this.handleChange}/>\n            <img src={this.file}/>\n        </>\n    )\n}\nmodule.exports = ImageHandle\n\n/*\nclass ImageImport extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        file: null\n      }\n      this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(event) {\n      this.setState({\n        file: URL.createObjectURL(event.target.files[0])\n      })\n    }\n    render() {\n      return (\n        <div>\n          <input type=\"file\" onChange={this.handleChange}/>\n          <img src={this.state.file}/>\n        </div>\n      );\n    }\n  }\n  module.exports = ImageImport\n  */"]},"metadata":{},"sourceType":"script"}